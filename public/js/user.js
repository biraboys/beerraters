async function getUserConsumes(a){const b=document.getElementById('consume-amount-span');if(b)try{const c=await fetch(`/users/${a}/consumes`,{method:'get',credentials:'same-origin'});if(200===c.status){const d=await c.json();displayUserConsumes(d)}}catch(c){Materialize.toast('Sorry, could not get user drinks',2e3)}}async function getUserRatings(a){const b=sessionStorage.getItem('isUserRatingLoaded');if(null===b){try{const c=await fetch(`/users/${a}/ratings`,{method:'get',credentials:'same-origin'});if(200===c.status){const d=await c.json();displayUserRatings(d)}}catch(c){Materialize.toast('Sorry, could not get user ratings',2e3)}sessionStorage.setItem('isUserRatingLoaded','true')}}async function getUserReviews(a){const b=sessionStorage.getItem('isUserReviewsLoaded');if(null===b){try{const c=await fetch(`/users/${a}/reviews`,{method:'get',credentials:'same-origin'});if(200===c.status){const d=await c.json();displayUserReviews(d)}}catch(c){Materialize.toast('Sorry, could not get user reviews',2e3)}sessionStorage.setItem('isUserReviewsLoaded','true')}}async function getUserProfileImg(a){try{const b=await fetch(`/users/${a}/profileImage`,{method:'get',credentials:'same-origin'});if(200===b.status){const c=await b.blob();createUserImage(c)}}catch(b){console.log(b)}}async function toggleFollowUser(a){try{const b=await fetch(`/users/${a}/follow`,{method:'get',credentials:'same-origin'});if(200===b.status){const c=document.getElementById('follow-btn'),d=document.getElementById('followers-amount-span'),e=await b.json();c.innerText=e.status,d.innerText=e.amount,sessionStorage.removeItem('isUserFollowersLoaded'),getUserFollowers(a)}}catch(b){Materialize.toast('Sorry could not follow/unfollow user',2e3)}}async function getUserFollowers(a){const b=sessionStorage.getItem('isUserFollowersLoaded');if(null===b){try{const c=await fetch(`/users/${a}/followers`,{method:'get',credentials:'same-origin'});if(200===c.status){const d=await c.json();displayUserFollowers(d)}}catch(c){Materialize.toast('Sorry, could not display followers for user',2e3)}sessionStorage.setItem('isUserFollowersLoaded','true')}}async function getUserFollowing(a){const b=sessionStorage.getItem('isUserFollowingLoaded');if(null===b){try{const c=await fetch(`/users/${a}/following`,{method:'get',credentials:'same-origin'});if(200===c.status){const d=await c.json();displayUserFollowing(d)}}catch(c){Materialize.toast('Sorry, could not display following users',2e3)}sessionStorage.setItem('isUserFollowingLoaded','true')}}function displayUserFollowing(a){const b=document.getElementById('following-list');a.following.forEach(c=>{let d;d=!0===c.status?'<span class="user-status light-green accent-3 ml-10"></span>':'<span class="user-status grey lighten-2 ml-10"></span>',b.innerHTML+=`
    <span class="title following-span"><a class="beerraters-link" href="/users/${c._id}">${c.username} ${d}</a>
    `})}function displayUserFollowers(a){const b=document.getElementById('followers-list');b.innerHTML='',a.followers.forEach(c=>{let d;d=!0===c.status?'<span class="user-status light-green accent-3 ml-10"></span>':'<span class="user-status grey lighten-2 ml-10"></span>',b.innerHTML+=`
    <span class="title follower-span"><a class="beerraters-link" href="/users/${c._id}">${c.username} ${d}</a>
    `})}function setEventListeners(a){const b=document.getElementById('follow-btn'),c=document.getElementById('rating-amount-span'),d=document.getElementById('review-amount-span'),e=document.getElementById('image-amount-span'),f=document.getElementById('followers-amount-span'),g=document.getElementById('following-amount-span');if(b&&b.addEventListener('click',()=>{toggleFollowUser(a)}),c){const h=document.getElementById('rating-tab');h.addEventListener('click',()=>{getUserRatings(a)})}if(d){const h=document.getElementById('review-tab');h.addEventListener('click',()=>{getUserReviews(a)})}if(e){const h=document.getElementById('image-tab');h.addEventListener('click',()=>{getUserImages(a)})}if('0'!==g.innerText){const h=document.getElementById('following-header');h.addEventListener('click',()=>{getUserFollowing(a)})}if('0'!==f.innerText){const h=document.getElementById('followers-header');h.addEventListener('click',()=>{getUserFollowers(a)})}}function createUserImage(a){const b=document.getElementById('profile-img-container'),c=document.createElement('img'),d=URL.createObjectURL(a);c.src=d,c.setAttribute('class','responsive-img card-image profile'),c.setAttribute('id','profile-img'),b.appendChild(c)}function createBeerImage(a){const b=document.createElement('img'),c=URL.createObjectURL(a);return b.src=c,b.setAttribute('class','responsive-img'),b}function displayUserConsumes(a){const b=document.getElementById('consume-list');a.consumes.forEach(c=>{b.innerHTML+=`
      <a href="/beers/${c.beer_id}" class="collection-item">${c.beer_name}</a>
      `})}function displayUserRatings(a){const b=document.getElementById('ratings-list');a.ratings.forEach(c=>{b.innerHTML+=`
      <a href="/beers/${c.beer_id}" class="collection-item">${c.beer_name} <span class="card-subtitle">(${c.rating})</span></a>
      `})}function displayUserReviews(a){const b=document.getElementById('reviews-container');a.reviews.forEach(c=>{b.innerHTML+=`
    <li class="collection-item review-item">
    <span class="title">
      <a class="review-title beerraters-link" href="/beers/${c.beer_id}">${c.beer_name}</a>
    </span>
    <p>
    ${c.place}
    </p>
    <p>
      <span class="card-subtitle review-body">${c.body}</span>
    </p>
</li>
      `})}function displayUserImages(a,b){const c=createBeerImage(a),d=document.getElementById('images-container'),e=document.createElement('div');e.setAttribute('class','col s6 m4 l3'),e.style.padding='0',c.setAttribute('class','materialboxed responsive-img caption-images'),c.setAttribute('data-caption',`${b}`),e.appendChild(c),d.appendChild(e),$('.materialboxed').materialbox()}async function getUserImages(a){const b=sessionStorage.getItem('isUserImagesLoaded');if(null===b){const c=parseInt(document.getElementById('image-amount-span').innerText);try{for(let d=0;d<c;){const e=await fetch(`/users/${a}/userImages`,{headers:new Headers({'Content-Type':'application/json'}),method:'post',credentials:'same-origin',body:JSON.stringify({index:d})});if(200===e.status){const f=await e.blob(),g=e.headers.get('Beer-Name');displayUserImages(f,g)}d++}}catch(d){}sessionStorage.setItem('isUserImagesLoaded','true')}}(async()=>{sessionStorage.removeItem('isUserRatingLoaded'),sessionStorage.removeItem('isUserReviewsLoaded'),sessionStorage.removeItem('isUserImagesLoaded'),sessionStorage.removeItem('isUserFollowersLoaded'),sessionStorage.removeItem('isUserFollowingLoaded');const a=location.href.split('/')[4];await Promise.all([getUserProfileImg(a),getUserConsumes(a)]),setEventListeners(a)})();